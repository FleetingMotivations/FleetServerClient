//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FleetServer
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetClientRegistration", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetClientRegistration : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FriendlyNameField;
        
        private string RoomIdentifierField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyName
        {
            get
            {
                return this.FriendlyNameField;
            }
            set
            {
                this.FriendlyNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomIdentifier
        {
            get
            {
                return this.RoomIdentifierField;
            }
            set
            {
                this.RoomIdentifierField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetClientToken", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetClientToken : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IdentifierField;
        
        private string TokenField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetHearbeatEnum", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public enum FleetHearbeatEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoUpdates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InWorkgroup = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManageUpdate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileAvailable = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetClientContext", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public enum FleetClientContext : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Room = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Building = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Campus = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workgroup = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetClientIdentifier", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetClientIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IdentifierField;
        
        private System.DateTime LastSeenField;
        
        private string WorkstationNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastSeen
        {
            get
            {
                return this.LastSeenField;
            }
            set
            {
                this.LastSeenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkstationName
        {
            get
            {
                return this.WorkstationNameField;
            }
            set
            {
                this.WorkstationNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetControlStatus", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetControlStatus : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private FleetServer.FleetApplicationIdentifier[] AllowedApplicationsField;
        
        private bool CanShareField;
        
        private int WorkgroupIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FleetServer.FleetApplicationIdentifier[] AllowedApplications
        {
            get
            {
                return this.AllowedApplicationsField;
            }
            set
            {
                this.AllowedApplicationsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanShare
        {
            get
            {
                return this.CanShareField;
            }
            set
            {
                this.CanShareField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkgroupId
        {
            get
            {
                return this.WorkgroupIdField;
            }
            set
            {
                this.WorkgroupIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetApplicationIdentifier", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetApplicationIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        private string ApplicationNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId
        {
            get
            {
                return this.ApplicationIdField;
            }
            set
            {
                this.ApplicationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName
        {
            get
            {
                return this.ApplicationNameField;
            }
            set
            {
                this.ApplicationNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetWorkstationHierachy", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetWorkstationHierachy : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetFileIdentifier", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetFileIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FileNameField;
        
        private int FileSizeField;
        
        private string IdentifierField;
        
        private string SenderNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileSize
        {
            get
            {
                return this.FileSizeField;
            }
            set
            {
                this.FileSizeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderName
        {
            get
            {
                return this.SenderNameField;
            }
            set
            {
                this.SenderNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetFile", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetFile : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private byte[] FileContentsField;
        
        private string FileNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileContents
        {
            get
            {
                return this.FileContentsField;
            }
            set
            {
                this.FileContentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetMessageIdentifier", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetMessageIdentifier : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        private int IdentifierField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId
        {
            get
            {
                return this.ApplicationIdField;
            }
            set
            {
                this.ApplicationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetMessage", Namespace="http://schemas.datacontract.org/2004/07/FleetServer")]
    public partial class FleetMessage : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        private int IdentifierField;
        
        private string MessageField;
        
        private System.DateTime SentField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId
        {
            get
            {
                return this.ApplicationIdField;
            }
            set
            {
                this.ApplicationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Sent
        {
            get
            {
                return this.SentField;
            }
            set
            {
                this.SentField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IFleetService")]
public interface IFleetService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/RegisterClient", ReplyAction="http://tempuri.org/IFleetService/RegisterClientResponse")]
    FleetServer.FleetClientToken RegisterClient(FleetServer.FleetClientRegistration registrationModel);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/RegisterClient", ReplyAction="http://tempuri.org/IFleetService/RegisterClientResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetClientToken> RegisterClientAsync(FleetServer.FleetClientRegistration registrationModel);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/Heartbeat", ReplyAction="http://tempuri.org/IFleetService/HeartbeatResponse")]
    FleetServer.FleetHearbeatEnum Heartbeat(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/Heartbeat", ReplyAction="http://tempuri.org/IFleetService/HeartbeatResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetHearbeatEnum> HeartbeatAsync(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryClients", ReplyAction="http://tempuri.org/IFleetService/QueryClientsResponse")]
    FleetServer.FleetClientIdentifier[] QueryClients(FleetServer.FleetClientToken token, FleetServer.FleetClientContext context, int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryClients", ReplyAction="http://tempuri.org/IFleetService/QueryClientsResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetClientIdentifier[]> QueryClientsAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientContext context, int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryControlStatus", ReplyAction="http://tempuri.org/IFleetService/QueryControlStatusResponse")]
    FleetServer.FleetControlStatus QueryControlStatus(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryControlStatus", ReplyAction="http://tempuri.org/IFleetService/QueryControlStatusResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetControlStatus> QueryControlStatusAsync(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryWorkstationHierachy", ReplyAction="http://tempuri.org/IFleetService/QueryWorkstationHierachyResponse")]
    FleetServer.FleetWorkstationHierachy QueryWorkstationHierachy();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryWorkstationHierachy", ReplyAction="http://tempuri.org/IFleetService/QueryWorkstationHierachyResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetWorkstationHierachy> QueryWorkstationHierachyAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryFiles", ReplyAction="http://tempuri.org/IFleetService/QueryFilesResponse")]
    FleetServer.FleetFileIdentifier[] QueryFiles(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryFiles", ReplyAction="http://tempuri.org/IFleetService/QueryFilesResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetFileIdentifier[]> QueryFilesAsync(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/GetFile", ReplyAction="http://tempuri.org/IFleetService/GetFileResponse")]
    FleetServer.FleetFile GetFile(FleetServer.FleetClientToken token, FleetServer.FleetFileIdentifier fileId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/GetFile", ReplyAction="http://tempuri.org/IFleetService/GetFileResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetFile> GetFileAsync(FleetServer.FleetClientToken token, FleetServer.FleetFileIdentifier fileId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendFileSingleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendFileSingleRecipientResponse")]
    bool SendFileSingleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetFile file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendFileSingleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendFileSingleRecipientResponse")]
    System.Threading.Tasks.Task<bool> SendFileSingleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetFile file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendFileMultipleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendFileMultipleRecipientResponse")]
    bool SendFileMultipleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetFile file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendFileMultipleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendFileMultipleRecipientResponse")]
    System.Threading.Tasks.Task<bool> SendFileMultipleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetFile file);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryMessages", ReplyAction="http://tempuri.org/IFleetService/QueryMessagesResponse")]
    FleetServer.FleetMessageIdentifier[] QueryMessages(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/QueryMessages", ReplyAction="http://tempuri.org/IFleetService/QueryMessagesResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetMessageIdentifier[]> QueryMessagesAsync(FleetServer.FleetClientToken token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/GetMessage", ReplyAction="http://tempuri.org/IFleetService/GetMessageResponse")]
    FleetServer.FleetMessage GetMessage(FleetServer.FleetClientToken token, FleetServer.FleetMessageIdentifier fileId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/GetMessage", ReplyAction="http://tempuri.org/IFleetService/GetMessageResponse")]
    System.Threading.Tasks.Task<FleetServer.FleetMessage> GetMessageAsync(FleetServer.FleetClientToken token, FleetServer.FleetMessageIdentifier fileId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendMessageSingleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendMessageSingleRecipientResponse")]
    bool SendMessageSingleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetMessage msg);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendMessageSingleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendMessageSingleRecipientResponse")]
    System.Threading.Tasks.Task<bool> SendMessageSingleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetMessage msg);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendMessageMultipleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendMessageMultipleRecipientResponse")]
    bool SendMessageMultipleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetMessage msg);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetService/SendMessageMultipleRecipient", ReplyAction="http://tempuri.org/IFleetService/SendMessageMultipleRecipientResponse")]
    System.Threading.Tasks.Task<bool> SendMessageMultipleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetMessage msg);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFleetServiceChannel : IFleetService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FleetServiceClient : System.ServiceModel.ClientBase<IFleetService>, IFleetService
{
    
    public FleetServiceClient()
    {
    }
    
    public FleetServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FleetServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FleetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FleetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public FleetServer.FleetClientToken RegisterClient(FleetServer.FleetClientRegistration registrationModel)
    {
        return base.Channel.RegisterClient(registrationModel);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetClientToken> RegisterClientAsync(FleetServer.FleetClientRegistration registrationModel)
    {
        return base.Channel.RegisterClientAsync(registrationModel);
    }
    
    public FleetServer.FleetHearbeatEnum Heartbeat(FleetServer.FleetClientToken token)
    {
        return base.Channel.Heartbeat(token);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetHearbeatEnum> HeartbeatAsync(FleetServer.FleetClientToken token)
    {
        return base.Channel.HeartbeatAsync(token);
    }
    
    public FleetServer.FleetClientIdentifier[] QueryClients(FleetServer.FleetClientToken token, FleetServer.FleetClientContext context, int id)
    {
        return base.Channel.QueryClients(token, context, id);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetClientIdentifier[]> QueryClientsAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientContext context, int id)
    {
        return base.Channel.QueryClientsAsync(token, context, id);
    }
    
    public FleetServer.FleetControlStatus QueryControlStatus(FleetServer.FleetClientToken token)
    {
        return base.Channel.QueryControlStatus(token);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetControlStatus> QueryControlStatusAsync(FleetServer.FleetClientToken token)
    {
        return base.Channel.QueryControlStatusAsync(token);
    }
    
    public FleetServer.FleetWorkstationHierachy QueryWorkstationHierachy()
    {
        return base.Channel.QueryWorkstationHierachy();
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetWorkstationHierachy> QueryWorkstationHierachyAsync()
    {
        return base.Channel.QueryWorkstationHierachyAsync();
    }
    
    public FleetServer.FleetFileIdentifier[] QueryFiles(FleetServer.FleetClientToken token)
    {
        return base.Channel.QueryFiles(token);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetFileIdentifier[]> QueryFilesAsync(FleetServer.FleetClientToken token)
    {
        return base.Channel.QueryFilesAsync(token);
    }
    
    public FleetServer.FleetFile GetFile(FleetServer.FleetClientToken token, FleetServer.FleetFileIdentifier fileId)
    {
        return base.Channel.GetFile(token, fileId);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetFile> GetFileAsync(FleetServer.FleetClientToken token, FleetServer.FleetFileIdentifier fileId)
    {
        return base.Channel.GetFileAsync(token, fileId);
    }
    
    public bool SendFileSingleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetFile file)
    {
        return base.Channel.SendFileSingleRecipient(token, recipient, file);
    }
    
    public System.Threading.Tasks.Task<bool> SendFileSingleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetFile file)
    {
        return base.Channel.SendFileSingleRecipientAsync(token, recipient, file);
    }
    
    public bool SendFileMultipleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetFile file)
    {
        return base.Channel.SendFileMultipleRecipient(token, recipients, file);
    }
    
    public System.Threading.Tasks.Task<bool> SendFileMultipleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetFile file)
    {
        return base.Channel.SendFileMultipleRecipientAsync(token, recipients, file);
    }
    
    public FleetServer.FleetMessageIdentifier[] QueryMessages(FleetServer.FleetClientToken token)
    {
        return base.Channel.QueryMessages(token);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetMessageIdentifier[]> QueryMessagesAsync(FleetServer.FleetClientToken token)
    {
        return base.Channel.QueryMessagesAsync(token);
    }
    
    public FleetServer.FleetMessage GetMessage(FleetServer.FleetClientToken token, FleetServer.FleetMessageIdentifier fileId)
    {
        return base.Channel.GetMessage(token, fileId);
    }
    
    public System.Threading.Tasks.Task<FleetServer.FleetMessage> GetMessageAsync(FleetServer.FleetClientToken token, FleetServer.FleetMessageIdentifier fileId)
    {
        return base.Channel.GetMessageAsync(token, fileId);
    }
    
    public bool SendMessageSingleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetMessage msg)
    {
        return base.Channel.SendMessageSingleRecipient(token, recipient, msg);
    }
    
    public System.Threading.Tasks.Task<bool> SendMessageSingleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier recipient, FleetServer.FleetMessage msg)
    {
        return base.Channel.SendMessageSingleRecipientAsync(token, recipient, msg);
    }
    
    public bool SendMessageMultipleRecipient(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetMessage msg)
    {
        return base.Channel.SendMessageMultipleRecipient(token, recipients, msg);
    }
    
    public System.Threading.Tasks.Task<bool> SendMessageMultipleRecipientAsync(FleetServer.FleetClientToken token, FleetServer.FleetClientIdentifier[] recipients, FleetServer.FleetMessage msg)
    {
        return base.Channel.SendMessageMultipleRecipientAsync(token, recipients, msg);
    }
}
